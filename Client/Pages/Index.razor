@page "/"
@using System.IO
@using System.Collections.Generic
@using System
@using System.Text
@using Capstone.Shared 
@inject HttpClient HttpClient

<style>
    .index-container {
        height: 95vh;
        width: 100%;
    }

    .filter-container {
        padding-top: 2.5vh;
        height: 10vh;
        width: 100%;
        display: flex;
    }

    .button-div {
        height: 5vh;
        width: 95%;
        margin-right: 2.5%;
        margin-left: 2.5%;
        margin-top: 5vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .main-container {
        height: 75vh;
        width: 100%;
        margin: auto;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .filter {
        height: 10vh;
        width: calc(100vw/5);
        margin-left: 2.5%;
        margin-right: 2.5%;
    }


    Label {
        color: black;
        font-weight: 500;
        font-size: 1.5em;
        font-family: opensans-condensed-bold;
    }

    iframe {
        height: 70vh;
        width: 100%;
    }

    .button-search {
        background-color: #FFCC00;
        font-size: 1em;
        text-align: center;
        color: #003340;
        width: 200px;
        height: 5vh;
        line-height: 5vh;
        margin-right: 10px;
        border: none;
        border-radius: 20px;
        font-family: opensans-condensed-bold;
    }
</style>

<div class="index-container">
    <div class="filter-container">
        <div class="filter">
            <MudSelect T="string" MultiSelection="true" Class="mudselect" SelectAll="true" SelectAllText="Select All Dates" @bind-Value="Datevalue" @bind-SelectedValues="Dateoptions" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetDates))" Label="Dates" AdornmentIcon="@Icons.Material.Filled.Search">
                @foreach (var date in Dates)
                {
                    <MudSelectItem T="string" Value="@date">@date</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="filter">
            <MudSelect T="string" MultiSelection="true" Class="mudselect" SelectAll="true" SelectAllText="Select All Projects" @bind-Value="Projectvalue" @bind-SelectedValues="Projectoptions" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetProjects))" Label="Project" AdornmentIcon="@Icons.Material.Filled.Search">
                @foreach (var project in Projects)
                {
                    <MudSelectItem T="string" Value="@project">@project</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="filter">
            <MudSelect T="string" MultiSelection="true" Class="mudselect" SelectAll="true" SelectAllText="Select All Reource Groups" @bind-Value="ResourceGroupvalue" @bind-SelectedValues="ResourceGroupoptions" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetResourceGroups))" Label="Resource Groups" AdornmentIcon="@Icons.Material.Filled.Search">
                @foreach (var resourcegroup in ResourceGroups)
                {
                    <MudSelectItem T="string" Value="@resourcegroup">@resourcegroup</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="filter">
            <MudSelect T="string" MultiSelection="true" Class="mudselect" SelectAll="true" SelectAllText="Select All Subscriptions" @bind-Value="Subscriptionvalue" @bind-SelectedValues="Subscriptionoptions" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetSubscriptions))" Label="Subscriptions" AdornmentIcon="@Icons.Material.Filled.Search">
                @foreach (var subscription in Subscriptions)
                {
                    <MudSelectItem T="string" Value="@subscription">@subscription</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="filter">
            <MudSelect T="string" MultiSelection="true" Class="mudselect" SelectAll="true" SelectAllText="Select All Vendors" @bind-Value="Vendorvalue" @bind-SelectedValues="Vendoroptions" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetVendors))" Label="Vendors" AdornmentIcon="@Icons.Material.Filled.Search">
                @foreach (var vendor in Vendors)
                {
                    <MudSelectItem T="string" Value="@vendor">@vendor</MudSelectItem>
                }
            </MudSelect>
        </div>
    </div>
    <div class="button-div">
        <input type="button" class="button-search" value="Clear" @onclick="Clear" />
        <input type="button" class="button-search" value="Filter" @onclick="BeginFilter" />
    </div>
    <div class="main-container">
        <iframe src="@link"></iframe>
    </div>
</div>

@code{

    public string mainlink = "https://app.powerbi.com/reportEmbed?reportId=4404ecbd-708d-497a-8164-a3dc11260ca9&autoAuth=true&ctid=92454335-564e-4ccf-b0b0-24445b8c03f7&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLW5vcnRoLWV1cm9wZS1pLXByaW1hcnktcmVkaXJlY3QuYW5hbHlzaXMud2luZG93cy5uZXQvIn0%3D&pageName=ReportSectionc15b8c90aaa4eb154d3b";
    private string link;
    private string mainfilter;
    private string filterstart = "&$filter=";
    private string something;
    private string datefilter;
    private string projectfilter;
    private string resourcegroupfilter;
    private string subscriptionfilter;
    private string vendorfilter;

    private string Datevalue { get; set; } = "";
    private string Projectvalue { get; set; } = "";
    private string ResourceGroupvalue { get; set; } = "";
    private string Subscriptionvalue { get; set; } = "";
    private string Vendorvalue { get; set; } = "";

    private IEnumerable<string> Dateoptions;
    private IEnumerable<string> Projectoptions;
    private IEnumerable<string> ResourceGroupoptions;
    private IEnumerable<string> Subscriptionoptions;
    private IEnumerable<string> Vendoroptions;

    private string selectedDatesString;
    private string selectedProjectsString;
    private string selectedResourceGroupsString;
    private string selectedSubscriptionsString;
    private string selectedVendorsString;

    private string selectDatesString;
    private string selectProjectsString;
    private string selectResourceGroupsString;
    private string selectSubscriptionsString;
    private string selectVendorsString;

    private List<string> selectedDates;
    private List<string> selectedProjects;
    private List<string> selectedResourceGroups;
    private List<string> selectedSubscriptions;
    private List<string> selectedVendors;


    private string[] Dates =
    {
        "Jul 20", "Aug 20", "Sep 20", "Jan 20", "Feb 20", "Mar 20", "Apr 20", "May 20", "Jun 20", "Oct 20", "Nov 20", "Dec 20", "Jan 18", "Feb 18", "Mar 18", "Oct 18", "Nov 18", "Dec 18", "Apr 18", "May 18", "Jun 18", "Jul 18", "Aug 18", "Sep 18", "Jul 19", "Aug 19", "Sep 19", "Apr 19", "May 19", "Jun 19", "Oct 19", "Nov 19", "Dec 19", "Jan 19", "Feb 19", "Mar 19", "Dec 17", "Jan 21"    
    };
    private string[] Projects =
    {
        "Odeon - UK", "Silverspot Cinemas", "Wallis - Australia", "AMC KSA", "Cinepolis - BHR", "Cinepolis - OMN", "Cinepolis - UAE", "Pathe - NL", "VMS  Customer Shared", "VMS Internal Ops", "Reservations", "Veezi", "Curzon", "Pathe - Belgium", "Product Support Team", "Sales Team", "Paris Theatres", "Performance Testing SaaS (Neil Davis)", "SMG US", "VMS Shared", "AKS testing", "Automation testing", "CXM (Live)", "CXM and Living Ticket (Test)", "Development (Connect)", "Development (Engineering)", "Development (GroupSales)", "Development (Internal Apps)", "Development (Interns)", "Development (Logi Analytics)", "Development (Mobile Productivity)", "Development (OCC)", "Development (Platform)", "Development (Weather)", "EMEA Digital Dev team", "Enviroment Refresh Project", "Global Services (LIVE)", "Global Services (Staging and QA)", "Human EMEA Office", "Integration DIL Dev team", "Living Ticket (Live)", "Lumos (Live)", "Lumos (Test)", "Micosoft Front Door POC", "MX API (Live)", "MX API (Test)", "MX Film (Live)", "MX Film (Test)", "MX Film Admin (Live)", "NZIFF", "Services Team (API Site)", "Services Team (Bug Fix)", "Services Team (Champion Pictures UAT)", "Services Team (Internal Project)", "Services Team (Japan UAT)", "Services Team (Paradise Cinemas)", "Services Team (Roxy)", "Services Team (State Cinemas UAT)", "Services Team (UK Bug Replication)", "Services Team (US Bug Replication)", "Services Training (USA)", "SQL Migration sync", "Subscriptions Portal (Live)", "Subscriptions Portal (Test)", "Thunderbird - CIM (Dev)", "Thunderbird - CM (Dev)", "Thunderbird - Vouchers (Dev)", "Thunderbird (Live)", "Thunderbird (Test)", "TO BE DELETED", "Unallocated Spend", "Blackbox", "Cinelab", "picknpay", "pnp-audit", "pnp-customer", "pnp-decision-support", "pnp-development", "pnp-enterprise", "pnp-escalation", "pnp-integration", "pnp-logarchive", "pnp-master", "pnp-shared-services", "pnp-workplace", "pnp-customer-test", "pnp-security", "pnp-supplier-info-hub", "pnp-supplier-info-hub-dev", "pnp-BI-Bot-Dev", "pnp-BI-Bot-Production", "pnp-data-lake", "pnp-Data-Science", "(Unmapped)", "EMS", "ID Management", "Non-Production", "Office365", "Storage-East US", "Storage-North Europe", "Storage-West Europe", "API Management", "Cloud Consumption", "DevOps - SAP Ping Test", "Infrastructure", "OneView - Prod", "Project - Engen", "Project - Engen Extranet", "Project - Engen Identity Service (Dev)", "Project - TFG Simo2o Reporting", "QA Reporting", "Surge Identity", "PowerBI", "Project - Capitec", "Project - Deloitte", "Project - Engen Rating Service", "Surge Cloud Platform", "OneView - Surge Identity", "Project - TFG Open Retail", "OneView Lite", "Oracle", "OneView QA", "Surge Audit Service", "48 TBD", "Data Warehouse", "Nebula TBD", "OneView Import Service", "OneView Managed Instance", "OneView Snatcher", "OneView Surge Identity", "OneView Surge Logging Service", "OneView Surge Notification Service", "QA Monitoring", "Marketing", "OneView Marketplace", "Project  - Deloitte", "Clicks Project", "Project - Endulini", "Project - Endulini Client", "1App WhatsApp Bot", "Stactize", "OneView Machine learning", "DevOps", "Notification Service", "OneApp", "OneView Cloud Consumption", "Project - Magix", "Workshops", "Managed Instance", "Project - POC", "Machine Learning", "Azure POC Name", "CSP POC Name", "Development", "DFA IT", "Production", "AMC Engineers", "Blue Oak Systems", "Hertex Fabric", "Interxion SA", "Lamprecht Meyer", "Lewis Group", "NSI Audit", "Rusten Vrede", "Saver Glass", "Vila Fonte Wines", "Akila Foods", "Organic Chem", "redPanda Software", "BAU-Afrika", "Bauxite", "BDP Law", "Bloomable", "Bravo Design", "Craft of Architecture", "ExcluServ", "Gulf", "Mortlaw", "OneDayOnly", "RTMS", "Schmidt Family Office", "Sunshine Tour", "Compound Holdings", "Riaan Integration", "Wauko", "QA", "Fintegic | Web Application", "OIH | Data Warehouse", "OIH |Bulk Order Application", "SACRRA | Data Warehouse", "SACRRA | DSM Production", "SACRRA | Portal Production", "SACRRA | Portal UAT", "EWX | Client Services", "EWX | Development", "EWX | HR", "EWX | IT", "EWX | Marketing", "EWX | Operations", "EWX | POC", "Pintell | Web Application", "SACCRA | Portal Demo", "SACRRA | Shared Resources", "AWS-GRIT-PROD", "AWS-GRIT-SANDBOX", "AWS-INST-NONPROD", "AWS-INST-PROD", "AWS-INST-SANDBOX", "AWS-RET-NONPROD", "AWS-RET-PROD", "AWS-RET-SANDBOX", "AZ-GRIT-NONPROD", "AZ-GRIT-PROD", "AZ-GRIT-SANDBOX", "AZ-INST-NONPROD", "AZ-MARKETING", "AZ-RET-PROD", "AWS-ALL-SHARED", "AWS-GRIT-SHARED"
    };

    private string[] ResourceGroups =
    {
        "$system", "00c36a4d-f357-4d20-a052-90ff561a4341", "117de309-b2b3-4114-84f0-789eb5378bfe", "1password", "265b1fa3-b220-4982-b7bf-74602d056b20", "271901a8-1cfc-4192-9e41-bd5010a5a3ca", "450c00f1-0275-4425-b1f9-3a3f581e69b4", "48-1app-deployment-test", "48-1app-deploy-test", "48-1app-deploy-test2", "48-1app-deploy-test3", "48-1app-test-deploy", "48-1app-test-deploy2", "48-1app-test-deploy-2", "48-bus-rg-billing-service", "48-bus-rg-facedetection-dev", "48-bus-rg-marketplace-dev", "48-bus-rg-marketplace-dev-southafricanorthwebspace-linux", "48-bus-rg-marketplace-prod", "48-bus-rg-marketplace-prod-southafricanorthwebspace-linux", "48-capitec-poc", "48-click-and-collect-test", "48-core-devops", "48-core-gateremote", "48-core-mock-framework-rg", "48-core-rg", "48-core-techradar", "48-core-tenant-config", "48-core-yaml-poc-rg", "48-micheal-wheeler-poc-rg", "48-qa-reporting", "48-research-poc", "48-rg-digitization-generic", "48-rg-digitization-services", "48-rg-notificationservice", "48-rg-notificationservice-dev", "48-rg-notificationservice-prod", "48-rg-notificationservice-qa", "48-rg-rating-service", "48-rg-surge-cloud-platform-dev", "48-rg-tracking-service", "48-scp-ns-poc", "48-stactizereporting-rg", "48-surge-identity-buildagent-rg", "48-surge-identity-internal-dev-rg", "48-surge-identity-internal-linux-dev-rg", "48-surge-identity-internal-linux-dev-rgstaging", "48-surge-identity-shared-linux-dev-rg", "48-surge-identity-shared-linux-dev-rgstaging", "48-surge-identity-shared-rg-dev", "48-surge-identity-shared-rg-prod", "48-surge-orchestration-core-rg", "48-tfg-surgedemo", "48-winjit-poc-rg", "48-workshops", "491408137367", "53c134fa-ec84-4760-9801-015c1071dbec", "72fd5464-58b5-46f7-98d8-5a4c820f8727", "752530270356", "916e9f85-579b-4831-8ba6-2fff8799a3b3", "abdul-automation-rg", "action-group-01-rg", "admin-portal-resource-group", "adminresources", "AG Master", "ag_faifa", "ag-awsaccount-itsecurity-sandbox", "agls-apps", "agls-apps-int", "agls-apps-uat", "ag-marketing-multi-occasion-event-webapp-rg", "ag-marketing-sql-rg", "akilaprod", "aks-non-prod-01-resource-group", "aks-prod-01-resource-group", "aks-traefik", "Alerts", "amcerg1", "amira-compute-australiaeast-cldeng", "amira-compute-australiaeast-cldeng-SG", "amqp-resource-group", "andy-aks-appgw-test", "andy-dil-corrupt-snapshots", "andy-elasticcloud-trial", "andy-frontdoor", "andy-k8s-test1-kubesrsg", "andy-k8s-test1-network", "andy-k8s-test-cloudops", "andy-k8s-test-cloudops-australiaeastwebspace-linux", "andyr_testing", "andyr-arm-rsg-1", "andyr-frontdoor", "andyr-frontdoor-australiaeastwebspace-linux", "andyr-image", "andyr-sftp", "andyr-sftp-testing", "andyr-testing", "andyr-testing-australiaeastwebspace-linux", "andy-sqlmigration-test-source", "andy-sqlmigration-test-target", "andy-terraform-pipeline-rsg-1", "andy-terraform-pipeline-rsg-1-australiaeastwebspace-linux", "andy-terraform-pipeline-test", "andy-terraform-pipeline-test-2", "apextest", "appcenter-export-intouch-ios-prod", "appcenter-export-vista-serve-ios-sandbox", "appinsightsdigestreport", "app-insights-resource-group", "ApplicationInsights", "applog", "appservice", "appsvc_linux_centralus", "appsvc_linux_centralus_basic", "appsvc_linux_centralus_basic-centraluswebspace-linux", "appsvc_linux_centralus_basic-southafricanorthwebspace-linux", "appsvc_linux_centralus2", "appsvc_linux_centralus2-centraluswebspace-linux", "ARM_Deploy_Staging", "ARMTestGroup", "asr-rg", "Attix", "Attix_RG", "Audit", "aurecon-marketplaceleads-rg", "Authentication", "authenticationqa", "AuthenticationStaging", "automatedapi", "Automation", "AWS EMEA PnP AuditLogs", "AWS EMEA PnP Core Service", "AWS EMEA PnP IAM Security", "AWS EMEA PnP ICE", "AWS EMEA PnP Labs", "AWS EMEA PnP Non Prod", "AWS EMEA PnP Production", "AWS PnP Payer", "AWS-EMEA-PnP-ASAP", "AWS-EMEA-PnP-Electrum", "aws-retail-apps-dev", "aws-scp-test-vm", "az104-11-rg0", "azbastion-test", "AzSKRG", "azure_datadog_logs", "azure-appservice-rg", "AzureBackupRG_australiaeast_1", "AzureBackupRG_australiasoutheast_1", "AzureBackupRG_centralindia_1", "AzureBackupRG_eastus_1", "AzureBackupRG_northeurope_1", "AzureBackupRG_southafricanorth_1", "azurebackuprg_southafricanorth_2", "AzureBackupRG_southcentralus_1", "AzureBackupRG_uaecentral_1", "AzureBackupRG_uaenorth_1", "AzureBackupRG_uksouth_1", "AzureBackupRG_westeurope_1", "AzureDevOps-Pipeline-Agents", "AzureDevOpsPipelineVMSS", "AzureDevOps-RG", "azuremarketplace", "AzureMigrate-RG", "AzureSentinel", "Azure-Stores-5Y3IIO6N37PLNMTZEWKQSKEGTCW4AEBWN4FRPXB5KCIPTZPDAC4Q-West-US", "Azure-Stores-HJO3UTTISYZ7AH6ZLEDZJEBZPXALXTIBQTYDWRSCOXJRQ7XFPDRQ-South-Central-US", "AZWEBTEST01", "azwebtest02", "AZWEBTEST03", "backup", "backuprg", "backups", "baurg1", "bauxitepastelbackup", "bdpvault", "bdpveeamrg", "BI Bot Dev", "BI Bot Production", "bimserver-backup", "bimserver-rg", "BloomableAssessment", "bloomableserverrg", "bloomablestoragerg", "blueoakrg1", "BookingApp", "BOSS-RG", "bossrv1-rg", "bossrv2-rg", "bravodesignrg1", "BrendenReportsModesto_group", "brhcne-nonprod", "brhcne-prod", "brhcne-prod-data", "brhcne-prod-web", "BRHCNE-PROD-WEB-asr", "brhc-staging-migration", "brhcwe-asr", "bruce-appsmtp-rg", "Bus-Apps-Accpac-Prod-RG", "Bus-Apps-HRM-Prod-RG", "Bus-Apps-RPA-Prod-RG", "Bus-Apps-SageCRM-Prod-RG", "Bus-Backend-Prod-RG", "bus-nonprod-activitylogalerts-rg", "bus-nonprod-appgateway-rg", "bus-nonprod-dynamics-crm-ssis-rg", "bus-nonprod-econtracts-rg", "bus-nonprod-sql-sharescheme-rg", "bus-nonprod-vnet-rg", "bus-prod-activitylogalerts-rg", "bus-prod-econtracts-rg", "bus-prod-sharescheme-rg", "bus-prod-sql-rg", "bus-prod-vnet-rg", "bus-prod-wvd-rg", "bwl-wiki-rg", "byr_DFADev", "c4sql-lab-rg", "c4sql-marketplace-rg", "c4sql-publish-rg", "caseware_group", "cc_az_webhook_resource_group", "cdn-testing", "Certificates", "Champion-AUS", "China", "ci-appgateway-australiaeast-cloud1", "ci-azuresql-australiaeast-cloud1", "Ci-Cloud1-rdp1-rescure_group", "cicloud-manifest", "ci-compute-australiaeast-cloud1", "ci-db-resource-group", "ci-frontdoor", "ci-network-australiaeast-cloud1", "ci-resource-group", "CisService-BU3J5BAD4UMU4HSP3HYORZ7LWQTO5RZBD2IR6KUVMX52QNWLCX7Q-West-Europe", "CL_Teams_SBC_RG", "CLNAzureMigrateAssessments", "CLNProd_RG", "CLNPRODBackups", "CLNRecoveryServices", "CLNSBCNEW", "cloud-engineering-pocs", "Cloud-Integration-RG", "cloudops-k8s", "cloudopsterraform", "cloudshell", "cloud-shell-storage-eastus", "cloud-shell-storage-northeurope", "cloud-shell-storage-southcentralus", "cloud-shell-storage-southeastasia", "cloud-shell-storage-westeurope", "cloud-shell-storage-westus", "cloudweather", "CLRD1", "clrg-1", "cmhoytsrg", "cmhoyts-rg", "COA-BIMUpgradeTest_group", "COAnasrecoveryRG", "Cognitive", "CognitiveService", "colbeeacc01", "colbeebackup", "common-resource-group", "communications-test-rg", "compute-ci-rg", "compute-dev-rg", "compute-lt-rg", "compute-prod-rg", "compute-qa-rg", "compute-stage-rg", "compute-test-rg", "connect", "connectazuresystemtest", "connect-downstream", "connectivityapp", "connect-perf", "connect-resource-group", "connectwallisbug", "container-registry", "cops-azuresql-australiaeast-andyr", "cops-compute-australiaeast-andyr", "cops-compute-westeurope-tbode", "cops-frontdoor-westeurope-tbode", "cops-network-australiaeast-aksdpy1", "cops-network-australiaeast-andyr", "cops-network-westeurope-tbode", "core-authentication-functions", "core-cloudbilling", "Core-Dev-Backend-RG", "Core-Dev-DevOps-RG", "Core-Dev-Identity-RG", "Core-Dev-Infrastructure-RG", "Core-Dev-NetworkSecurity-RG", "Core-Dev-Networks-RG", "Core-DevOps-RG", "core-dev-staticwebsites", "Core-Dev-Web-RG", "Core-Identity-RG", "core-infrastructure-rg", "Core-NetworkSecurity-RG", "core-networks-rg", "core-newsalesleads", "core-prod-asr-ne", "Core-Prod-DevOps-RG", "Core-Prod-India-Central-RG", "core-prod-india-rg", "Core-Prod-NetworkSecurity-RG", "Core-Prod-Networks-RG", "Core-Storage-RG", "cosmosdb_livedatamigratortool", "cph-servers", "creditinnovations-uat-rg", "Crimsonline-Website", "CrimsonTest-RG", "cs29d65b63d7a1bx4fe8xa21", "CS-AustraliaEast-scheduler", "CS-NorthCentralUS-scheduler", "CS-SouthCentralUS-scheduler", "CS-WestEurope-scheduler", "CS-WestUS-scheduler", "Customer", "Customer Test", "customer-portal", "D365_Data_Export", "D365_Dev", "d-510lab-ccl2-res_group", "danesresoucegroup", "danessqlgroup", "DanesTest", "dashboards", "databaseresourcegroup", "datadog-log-forwarder-rg", "data-lake", "datamockingframework", "data-pipeline-poc", "data-pipeline-resource-group", "datastore-ci-rg", "datastore-dev-rg", "datastore-lt-rg", "datastore-prod-euw-rg", "datastore-prod-westus2-rg", "datastore-qa-rg", "datastore-stage-rg", "datastore-test-rg", "db1099c6-9b8e-4db6-8914-500c11067f0e", "d-cldeng-sfc1-res_group", "d-cldeng-ts1-res_group", "dcstate", "d-dil510lab-cow1-rescue_group", "deadlettermessagehandler", "Decision Support Applications", "Default-ActivityLogAlerts", "default-appcenter", "Default-ApplicationInsights-CentralUS", "Default-ApplicationInsights-EastUS", "Default-BizTalk-West-US", "Default-MarketplaceApps-NorthCentralUS", "Default-MarketplaceApps-SouthCentralUS", "Default-MarketplaceApps-WestUS", "Default-Networking", "Default-NewRelic-APM-NorthCentralUS", "DefaultResourceGroup", "DefaultResourceGroup-ASE", "DefaultResourceGroup-CIN", "DefaultResourceGroup-CUS", "DefaultResourceGroup-EAU", "DefaultResourceGroup-EUS", "DefaultResourceGroup-EUS2", "DefaultResourceGroup-JNB", "DefaultResourceGroup-NCUS", "DefaultResourceGroup-SCUS", "DefaultResourceGroup-SEA", "DefaultResourceGroup-SUK", "DefaultResourceGroup-WEU", "DefaultResourceGroup-WUS", "DefaultResourceGroup-WUS2", "defaultrg-1", "Default-ServiceBus-AustraliaEast", "Default-ServiceBus-CentralUS", "Default-SQL-CentralUS", "Default-SQL-NorthCentralUS", "Default-SQL-SouthCentralUS", "Default-SQL-WestUS", "Default-Storage-CentralUS", "Default-Storage-EastUS", "Default-Storage-NorthCentralUS", "Default-Storage-NorthEurope", "Default-Storage-SouthCentralUS", "Default-Storage-WestEurope", "Default-Storage-WestUS", "Default-Web-CentralUS", "Default-Web-WestUS", "delete-surge-identity-shared-linux-dev-rg", "delete-surge-identity-shared-linux-dev-rgstaging", "deloitte-rg-integration", "DeltaScanRG", "Demo", "demo_disasterrecoveryrg", "demo_disasterrecoveryrg-asr", "demo-west-europe", "Demo-West-US", "Development", "Development-Engineering", "development-environment-001", "DevelopmentLATAM", "DevOps", "DevOps-RG", "DFA_Azure_Analytics", "DFAArcRG", "DFABOT09_group", "DFABUP", "DFAIT", "DFASCCMDesktopAnalytics", "DFASQL_DEV", "dfazasccmcmg", "dfv2test", "dil-appgateway-australiaeast-506lab", "dil-appgateway-australiaeast-507lab", "dil-appgateway-australiaeast-508lab", "dil-appgateway-australiaeast-509lab", "dil-appgateway-australiaeast-510lab", "dil-appgateway-australiaeast-cldeng", "dil-australiaeast-shared", "dil-azuresql-australiaeast-506lab", "dil-azuresql-australiaeast-507lab", "dil-azuresql-australiaeast-508lab", "dil-azuresql-australiaeast-509lab", "dil-azuresql-australiaeast-510lab", "dil-azuresql-australiaeast-cldeng", "dil-azuresql-australiaeast-shared", "dil-backup-disks-andy", "dil-compute-australiaeast-506lab", "dil-compute-australiaeast-507lab", "dil-compute-australiaeast-508lab", "dil-compute-australiaeast-509lab", "dil-compute-australiaeast-510lab", "dil-compute-australiaeast-cldeng", "dil-fileshare-australiaeast-507lab", "dil-haproxy-australiaeast-shared", "dil-imagegallery-rg", "dil-lognalytics-australiaeast", "dil-network-australiaeast-506lab", "dil-network-australiaeast-507lab", "dil-network-australiaeast-508lab", "dil-network-australiaeast-509lab", "dil-network-australiaeast-510lab", "dil-network-australiaeast-cldeng", "dil-network-australiaeast-shared", "dil-sonicwall-australiaeast-shared", "dil-sql-australiaeast-shared", "dil-storage-australiaeast", "dil-storage-australiaeast-506lab", "dil-tenant-australiaeast-dil505", "DNS", "dns-live-rg", "dns-poc", "dns-prod-rg", "dns-resource-group", "dnz-appgateway-australiaeast-auto", "dnz-appgateway-australiaeast-docum", "dnz-appgateway-australiaeast-odeonf", "dnz-auto-lognalytics-australiaeast", "dnz-azuresql-australiaeast-auto", "dnz-azuresql-australiaeast-docum", "dnz-azuresql-australiaeast-odeonf", "dnz-compute-australiaeast-auto", "dnz-compute-australiaeast-cnctlab", "dnz-compute-australiaeast-docum", "dnz-compute-australiaeast-odeonf", "dnz-lognalytics-australiaeast", "dnz-lognalytics-australiaeast-auto", "dnz-manifest", "dnz-network-australiaeast-auto", "dnz-network-australiaeast-cnctlab", "dnz-network-australiaeast-dnz", "dnz-network-australiaeast-docum", "dnz-network-australiaeast-odeonf", "dnz-storage-shared", "docs", "domain-servicesrg", "dr-appgateway-northeurope-patbel", "dr-appgateway-northeurope-patnld", "dr-appgateway-uaecentral-amcsau", "dr-appgateway-uaenorth-amcsau", "dr-azuresql-northeurope-patnld", "dr-azuresql-uaenorth-amcsau", "dr-compute-northeurope-patbel", "dr-compute-northeurope-patnld", "dr-compute-uaecentral-amcsau", "dr-compute-uaenorth-amcsau", "dr-lognalytics-northeurope", "dr-lognalytics-uaenorth", "dr-network-northeurope-patbel", "dr-network-northeurope-patnld", "dr-network-uaecentral-amcsau", "dr-network-uaenorth-amcsau", "drprod-appgateway-northeurope-odeon", "drprod-azuresql-northeurope-odeon", "drprod-compute-northeurope-odeon", "drprod-network-northeurope-odeon", "duk-appgateway-westeurope-digital", "duk-azuresql-westeurope-digital", "duk-blob-westeurope-digital", "duk-compute-westeurope-digital", "duk-lognalytics-westeurope", "duk-manifest", "duk-network-westeurope-digital", "Duncan Rae", "dvrg-1", "edge", "eff1f1de-fbbd-4dfa-9a7c-f63fb562777c", "Effy", "efs-demo-rg", "eHub-Application-Pool01", "eHub-SendMail-Resource-Group", "ehub-SQL-Cluster", "electric-boogaloo", "endulini-rg-etp", "endulini-rg-etp-dev", "endulini-rg-etp-prod", "engen-bus-rg-asr-dev", "engen-bus-rg-documentprocessingservice-dev", "engen-bus-storage-powerbidata-rg", "engen-consumerapp-dev", "engen-rg-core-identity", "engen-rg-ecip-integration", "Enterprise", "eshop-learn-rg", "evolution", "ewx-azuread-rg", "ewx-backup-rg", "ewx-backups-rg", "ewx-bi-rg", "ewx-claimsapp-rg", "ewx-dashboards-rg", "ewx-dbadev-rg", "ewx-devops-rg", "ewx-dockerrepo-rg", "ewx-hourglass-qa-rg", "ewx-hummdb-central-production-rg", "ewx-monitor-rg", "ewx-networknew-rg", "ewx-network-rg", "ewx-pdf-service-rg", "ewx-performance-review-prod-rg", "ewx-powerbi-rg", "ewx-retailmod-rg", "ewx-retailworx-rg", "ewx-shell-rg", "ewx-storage-rg", "excluservvm-rg", "f2d25906-be38-48a6-83ae-05c4a103c3e2", "fdf41ab1-ef78-408f-a360-ee44f1ae583a", "filestorage", "fin-blob", "finovation", "fintegic-rg", "FunctionApps", "Galaxy", "gateway-log-analytics", "GavinsTest", "gerhard", "gerhard_test", "gerhardresourcegroup", "GlobalAuthenticationDev", "GlobalManager", "globalmanagerqa", "GlobalManagerStaging", "Group", "Group IT Sandbox", "Group-1", "groupit-dev", "groupit-prod", "groupsales-brander", "groupsales-brander-qa", "guardiarazurebackup", "haproxy-reverse-proxy", "hertex2019ts", "human", "human_amc", "human_amc_test", "human_AzTS", "human_central", "human_gallery", "human_ingress", "human_odeon", "human_pathe", "human_restoretest", "humanazsk", "human-scalesets", "human-scalesetsv1", "icebreaker-bot", "identityservice-dev-rg", "ImageBuilder", "INC116581RG01", "infra-rg", "infrastructurecontainerregistry", "institutional-dev", "institutional-int", "institutional-prod", "institutional-sandbox", "institutional-uat", "inst-nonprod-activitylogalerts-rg", "inst-nonprod-dev-rg", "Integration", "InterxionTest", "interxionvaults", "intouchcloud", "intouchclouddev", "InTouchv2-Preview", "iot", "ip_movetovistacloud", "IPV6-TestVM", "IPv6VM", "iss-creditinnovations-uat-rg", "IT_ImageBuilder_helloImageTemplateLinux01_a5674b8b-e854-4ecd-bda3-81fa78d50e40", "IT_ImageBuilder_helloImageTemplateLinux01_b925ca1d-75b1-4bcb-ae92-979a8418da74", "IT_ImageBuilder_window2019Template01_edc546c7-073c-4e91-89aa-3ab0da50a2d4", "it_odo_production_helloimagetemplateforsig0_07353aa0-ce7a-4e9b-bcab-ea84278ceb34", "it_odo_production_helloimagetemplateforsig0_c09f0d8b-745c-478c-905f-3404a8baf687", "it_odo_production_odofrontendprod_25428692-ff53-483a-8d38-f2bfff64f646", "it_odo_production_odofrontendprod_307d568a-1d08-4e85-bdf6-ab8b387d82ae", "it_odo_production_t_11_1625228773788_9c9ac748-3d61-4b71-bbea-b7fa9d078ac1", "it_odo_production_t_undefinedundefined_1624_21d050d7-4911-4fd7-9dc2-33b9745085a4", "it_odo_production_t_undefinedundefined_1624_4091965c-3f50-4358-b286-a3cbd3690eef", "it_odo_production_t_undefinedundefined_1624_453072b3-ede4-4074-80a0-bac2b456b30c", "it_odo_production_t_undefinedundefined_1625_13b9cd3f-632b-4754-8368-b7924a3f22e8", "it_vistacontrolplane_vistatesttemplate001_5f4e30e1-7e8e-4e5a-b2f3-09dc7bda00a3", "it_vistacontrolplane_vistatesttemplate002_2b22d070-01ed-41cb-8174-f8fdd6eaa0c1", "it_vistacontrolplane_vistatesttemplate003_3c7c015b-4159-487c-b7f2-86fb7701dc9c", "it_vistacontrolplane_vistatesttemplate004_ef2c6a09-8160-473c-97e2-c73f0384858c", "it_vistacontrolplane_vistatesttemplate005_bf5e9aad-de57-4264-b7ab-20307654e0d8", "ixnpreprod-rg", "ixnproductiondebian8", "ixnproductioneu", "ixnproductioneu-asr", "ixnproductiontest-rg", "ixnproductionuk", "ixntestrg", "ixntestrg2.0", "jamescrepinrg", "JAPAN_UAT", "jasperdemo", "jasperdemovm_group", "k8s", "k8s-db-resource-group", "k8s-dev-rg", "k8s-resource-group", "k8s-test", "k8s-tooling", "kcs-poc-rg", "KeyVault", "KeyVaultRbacTest", "KeyVaults", "key-vault-storage-westus", "kktestfunc1", "Kubernetes-RG", "laketest", "launcher", "learn-quickstart-vm-rg", "lew-db-warehouse", "lewisinfrastructure", "lewistoresrg1", "lewredpandaacr", "Licensing", "LicensingStaging", "LinuxRG", "lmrg1", "localisation", "Log archive", "LogAnalytics", "LogAnalyticsDefaultResources", "log-analytics-lt", "logianalyticsrg1", "loki-prod", "loki-test", "LoyaltyPerformanceTest", "lt-db-resource-group", "lt-resource-group", "lyle-devsmtp-rg", "magix-pen-test", "magix-pen-test-southafricanorthwebspace-linux", "manifest", "marketing-activitylogalerts-rg", "marketplace-386a0cc317504bd8916e83ef7f77e1a3", "marketplace-d22c62397cdd4a7eb8a74974194eaa2a", "marketplace-d6d662a2f8434a65acc9340eb43d56f1", "mc_1password_brhc-aks-prod_southafricanorth", "mc_48-surge-identity-shared-delete_ddshdev-aks_southafricanorth", "mc_48-surge-identity-shared-linux-dev-rg_k8s-shared-dev_southafricanorth", "mc_48-surge-identity-shared-rg-prod_shprod-aks_westeurope", "MC_aks-non-prod-01-resource-group_aks-non-prod-01_northeurope", "MC_aks-prod-01-resource-group_aks-prod-01_northeurope", "MC_aks-traefik_ironman_australiaeast", "mc_andy-aks-appgw-test_aksa206_australiaeast", "mc_andy-aks-appgw-testing_andy-aks-cluster_australiaeast", "MC_andy-frontdoor_andy-k8s-frontdoor_australiaeast", "MC_andy-frontdoor_jarvis_australiaeast", "mc_andy-k8s-cloudops_andy-k8s-cloudops_australiaeast", "mc_andy-k8s-test1-kubesrsg_andy-aks1_australiasoutheast", "mc_andy-k8s-test-cloudops_andy-aks-appgw-test_australiaeast", "mc_andy-k8s-test-cloudops_andy-k8s-cluster-1_australiaeast", "mc_andyr-testing_andy-aks-logging-test_australiaeast", "mc_andyr-testing_andy-cloudops-aks-test1_australiaeast", "MC_andyr-testing_jarvis_australiaeast", "mc_change-vmss-password-poc_change-password_southeastasia", "mc_cloud-engineering-pocs_k8sctr-vis-traefik-mesh-poc_australiaeast", "mc_cloudops-k8s_cloudops-k8s-automation_australiaeast", "MC_cloudops-k8s_voyager_australiaeast", "mc_cops-aks-australiaeast-aksdpy1_cops-aksdpy1-aks1_australiaeast", "MC_CrimsonTest-RG_CLNwebsite_southafricanorth", "MC_eshop-learn-rg_eshop-learn-aks_westus", "MC_gerhardresourcegroup_Gerhard_Test_8ks_australiaeast", "mc_human_central_human_k8s_westeurope", "mc_human_central_k8s_central_ii_westeurope", "mc_human_central_k8s_central_westeurope", "MC_k8s_ce-prod-eu1_westeurope", "MC_k8s_ce-prod-westeurope_westeurope", "MC_k8s_ce-test-v4_australiaeast", "MC_k8s_mx-prod-eastus2_eastus2_egress", "mc_k8s_mx-prod-southeastasia_southeastasia", "MC_k8s_mx-prod-westeu1_westeurope_egress", "MC_k8s_mx-prod-westus2_westus2", "mc_k8s_sre-tools-aueast-test-01_westus2", "mc_k8s-test_mx-test-westus2_westus2", "MC_k8s-tooling_grafana-westus2-test-01_westus2", "mc_k8s-tooling_rancher-aueast-test-01_australiaeast", "MC_k8s-tooling_rancher-westus2-test-01_westus2", "MC_Kubernetes-RG_Kubernetes-Cluster_eastus2", "mc_mymicroserviceresources_mymicroservicecluster_australiaeast", "mc_odo_production_odoproductionakscluster_southafricanorth", "mc_odo_qa_odoqaakscluster_southafricanorth", "mc_odo_staging_odostagingakscluster_southafricanorth", "MC_ODOtesting_ODOAKS_southafricanorth", "mc_poc_poc_australiaeast", "mc_poc_poc-k8s_eastus", "mc_rg-au1-int-common_aks-andy-calico-test_australiaeast", "MC_rg-au1-int-common_aks-au1-int-common-1_australiaeast", "MC_rg-au1-int-common_aks-au1-int-common-2_australiaeast", "MC_rg-au1-int-common_aks-au1-int-common-3_australiaeast", "MC_rg-au1-int-common_aks-au1-int-common-4_australiaeast", "MC_rg-au1-perf-common_aks-au1-perf-common-1_australiaeast", "MC_rg-au3-int-andy_aks-au3-int-andy-1_australiaeast", "MC_rg-au3-int-andycalico_aks-au3-int-andycalico-1_australiaeast", "mc_rg-au3-int-andycalicowin_aks-au3-int-andycalicowin-1_australiaeast", "MC_rg-au3-int-andyk8stest_aks-au3-int-andyk8stest-4_australiaeast", "mc_rg-au3-int-andynone_aks-au3-int-andynone-1_australiaeast", "MC_rg-bar1-common_aks-bar1-common-01_australiaeast", "MC_rg-foo1-common_aks-foo1-common-01_australiaeast", "MC_rg-tb-au1-common_k8sctr-tb-au1-common-01_australiaeast", "MC_rg-tb-au1-common_k8sctr-tb-au1-common-02_australiaeast", "MC_rg-tb-perf01-common_k8sctr-tb-perf01-common-01_australiaeast", "mc_rg-tb-perf02-common_k8sctr-tb-perf02-common-01_australiaeast", "MC_rg-tb-perf03-common_k8sctr-tb-perf03-common-01_australiaeast", "MC_rg-tb-perf18-common_k8sctr-tb-perf18-common-01_australiaeast", "mc_rg-tb-perf1-common_k8sctr-tb-perf1-common-01_australiaeast", "MC_rg-tb-perf1-common_k8sctr-tb-perf1-perf-03_australiaeast", "MC_rg-tb-test1-common_k8sctr-tb-test1-common-01_australiaeast", "MC_rg-tb-test1-common_k8sctr-tb-test1-common-02_australiaeast", "MC_rg-tb-test1-common_k8sctr-tb-test1-perf-03_australiaeast", "mc_rg-tb-us1-common_k8sctr-tb-us1-common-01_westus2", "mc_rg-us1-int-andy_aks-us1-int-andy-1_eastus", "MC_rg-vis-nl1_k8sctr-vis-nl1-01_westeurope", "MC_rg-vis-sg1_k8sctr-vis-sg1-01_southeastasia", "mc_rg-vis-sin1_k8sctr-vis-sin1-01_southeastasia", "MC_rg-vis-test1_k8sctr-vis-test1-01_australiaeast", "MC_rg-vis-test1_k8sctr-vis-test1-02_australiaeast", "MC_rg-vis-us1_k8sctr-vis-us1-01_westus2", "mc_rg-vis-us1_k8sctr-vis-us1-02_westus", "mc_rg-vis-us1_k8sctr-vis-us1-02_westus2", "mc_surge-identity-internal-k8s_surge-identity-internal-k8s_westeurope", "mc_test-delete_ddshdev-aks_southafricanorth", "McDonald_Butler_Assessment", "messaging-ci-rg", "messaging-prod-euw-rg", "messaging-qa-rg", "messaging-stage-rg", "Migrate", "Migration-RG", "ML_RG", "ml-studio-dev-01-resource-group", "mms-weu", "monitor-ci-rg", "monitor-dev-rg", "Monitoring-RG", "MonitoringVmRG", "MonitoringVM-RG", "monitor-lt-rg", "monitor-prod-rg", "monitor-qa-rg", "Monitors", "monitor-stage-rg", "mooi-wordpress-site", "movieteam", "MovieTeam2", "movieteam20", "movieteamtest", "moviexchangesessionportal", "mprod-wus", "ms_119013125000165", "ms_119022025000069", "muthu_test", "mx-ci-southeastasia-rg", "mx-ci-westus2-rg", "MXDevResourceGroup", "mxf-ci", "MXF-QA-CDN-ResourceGroup", "MXF-QA-Ingress", "MXF-QA-ResourceGroup", "MXF-ResourceGroup", "MXF-Staging-ResourceGroup", "MX-Passes", "mx-prod-southeastasia-rg", "mx-qa-southeastasia-rg", "mx-shared-southeastasia-rg", "mx-ticketing-system-spec", "NCentral-RG", "NCentralSQL-RG", "neb-core-oneviewlite-rg-prod", "nebcrayon-vm-test-rg", "neb-ov-sql-poc", "nebula-asr-rg", "nebula-business-ma-ovlite", "nebula-business-OneviewDataWarehouseDataFactory-QA-rg", "nebula-business-OneviewDataWarehouseDataFactory-rg", "nebula-business-oneview-sql-qa", "nebula-business-rg", "nebula-bus-svc-rg", "nebula-cluster-sqlcontainers", "nebula-core-aa-servicerequest-gijrempnp", "nebula-core-auditservice-rg", "nebula-core-consumptiontracking-cluster-rg", "nebula-core-dbmonitoring-rg", "nebula-core-hpc-rg", "nebula-core-identityservice-rg", "nebula-core-integration-rg", "nebula-core-loggingservice-rg", "nebula-core-marketplace-rg", "nebula-core-mi-test-delete", "nebula-core-ml", "nebula-core-monitoring-rg", "nebula-core-notificationservice-cluster-rg", "nebula-core-notificationservice-rg", "nebula-core-oneviewimport-rg", "nebula-core-oneviewlite-qa-rg", "nebula-core-onevieworchestration-rg-prod", "nebula-core-onevieworchestration-rg-qa", "nebula-core-oneview-qa-asr-rg", "nebula-core-oneview-rg-qa", "nebula-core-ovcloudconsumption-rg", "nebula-core-ovcloudconsumptiontracking-rg", "nebula-core-ovcloudconsumptiontracking-rg-prod", "nebula-core-ovcloudconsumptiontracking-rg-qa", "nebula-core-pbi", "nebula-core-rg", "nebula-core-services-rg-prod", "nebula-core-services-rg-qa", "nebula-core-snatcher-rg", "nebula-core-snatcher-rg-prod", "nebula-core-snatcher-rg-qa", "nebula-core-usagetracker-rg", "nebula-dmz-asr-rg", "nebula-dmz-rg", "nebula-dmz-rg-asr", "nebula-infrastructure-asr-rg", "nebula-infrastructure-rg", "nebula-mi-rg-qa", "nebula-network-dev-rg", "nebula-network-rg", "nebula-network-rg-asr", "nebula-oneview-alert-test", "nebula-oneview-rg-dev", "nebula-oneview-rg-prod", "nebula-oneview-rg-qa", "nebula-payasyougo-migration-rg", "nebula-prometheus-poc-rg", "nebula-qa-reporting", "nebula-rg-co", "nebula-surge-identity-rg-dev", "nebula-waf-rg", "neb-vm-oneviewcloud-nz", "NELM-Identity-Management", "Network", "network-test-temp-resource-group", "NetworkWatcherRG", "New-test-rg", "NorthCentralUS-redis", "nsirg1", "NZIFF1", "nzIffRg01", "nziff-scaleset", "nziff-web-vmimage", "O365-Central-Admin", "OaaSCS5Y3IIO6N37PLNMTZEWKQSKEGTCW4AEBWN4FRPXB5KCIPTZPDAC4Q-South-Central-US", "OCCTestOne", "octopus", "odeon-asrsnaps", "odeon-storage-westeurope", "odo_ansible", "odo_dev", "odo_devandtest", "odo_prod", "odo_production", "odo_production_disasterrecovery", "odo_qa", "odo-api-ansible_group", "odo-prod-disasterrecovery", "ODOtesting", "ODOtestVM_group", "OI-Default-East-US", "oih-bulkorder-prod-rg", "oih-motivations-uat-rg", "oih-whs-prod-rg", "OMSAustralia", "OnDemandManagement", "onedayonly_backups", "onedayonly_disasterrecovery", "onedayonly_vm_node", "onedayonlylb", "OneView", "OneViewRG", "Online-dev", "Online-qa", "OnPremise-C64E8823ABDB4382BD21E91D646A37CA", "Organisations", "organisationsqa", "OrganisationsStaging", "packerresourcegroup", "packerresourcegroup-instances", "packertest", "paradiserg1", "pastelrg", "pastel-rg", "pbi-embedded", "PerformanceTest", "pip-portal-prod-rg", "pip-portal-uat-rg", "pkr-resource-group-4qdhnit8nz", "pkr-resource-group-gc4efv1u8v", "pkr-resource-group-tghuqqcl39", "pkr-resource-group-zgqmxprtcf", "platform-test", "playground", "PNP_AWS2", "pnp-ems", "PnPOMSRG01", "PnP-Windows-Desktop-Analytics", "poc", "poc-packer", "poolmanager", "powerapps-poc-rg", "powerbigroup", "prepd-appgateway-westeurope-odeon", "prepd-azuresql-westeurope-odeon", "prepd-blob-westeurope-odeon", "prepd-compute-westeurope-odeon", "prepd-lognalytics-westeurope", "prepd-manifest", "prepd-network-westeurope-odeon", "Prod1", "prod-appgateway-australiasoutheast-walaus", "prod-appgateway-eastus-cnlus", "prod-appgateway-eastus-pthus", "prod-appgateway-eastus-silverus", "prod-appgateway-southcentralus-bkbus", "prod-appgateway-southcentralus-smgus", "prod-appgateway-uaecentral-amcsau", "prod-appgateway-uaenorth-amcsau", "prod-appgateway-uaenorth-cpbhr", "prod-appgateway-uaenorth-cpomn", "prod-appgateway-uaenorth-cpuae", "prod-appgateway-uksouth-curuk", "prod-appgateway-westeurope-odeon", "prod-appgateway-westeurope-patbel", "prod-appgateway-westeurope-patnld", "ProdApplicationInsights", "prod-azuresql-australiasoutheast-walaus", "prod-azuresql-eastus-cnlus", "prod-azuresql-eastus-pthus", "prod-azuresql-eastus-silverus", "prod-azuresql-southcentralus-bkbus", "prod-azuresql-southcentralus-smgus", "prod-azuresql-southcentralus-smgusweb", "prod-azuresql-uaecentral-amcsau", "prod-azuresql-westeurope-infosec", "prod-azuresql-westeurope-odeon", "prod-azuresql-westeurope-patnld", "prod-backups-asia", "prod-backups-northeurope", "prod-blob-eastus-cnlus", "prod-blob-eastus-pthus", "prod-blob-eastus-silverus", "prod-blob-southcentralus-bkbus", "prod-blob-southcentralus-smgus", "prod-blob-uaecentral-amcsau", "prod-blob-uaenorth-cpomn", "prod-blob-uaenorth-cpuae", "prod-blob-uksouth-curuk", "prod-blob-westeurope-odeon", "prod-blob-westeurope-patbel", "prod-blob-westeurope-patnld", "prod-cinepolis-uaenorth-meraki", "prod-cinepolis-uaenorth-meraki6c7ekeilgcdo6", "prod-cinepolis-uaenorth-meraki-vm", "prod-cinepolis-uaenorth-meraki-vmc7katjna5nhii", "prod-compute-australiaeast-manage", "prod-compute-australiasoutheast-infosec", "prod-compute-australiasoutheast-walaus", "prod-compute-centralindia-cnpoma", "prod-compute-centralindia-shared", "prod-compute-cinepolis", "prod-compute-eastus-cnlus", "prod-compute-eastus-infosec", "prod-compute-eastus-manage", "prod-compute-eastus-pthus", "prod-compute-eastus-shared", "prod-compute-eastus-silverus", "prod-compute-eastus-silvspo", "prod-compute-northeurope-infosec", "prod-compute-southcentralus-bkbus", "prod-compute-southcentralus-infosec", "prod-compute-southcentralus-smgus", "prod-compute-uaecentral-amcsau", "prod-compute-uaecentral-infosec", "prod-compute-uaenorth-amcsau", "prod-compute-uaenorth-cpbhr", "prod-compute-uaenorth-cpomn", "prod-compute-uaenorth-cpuae", "prod-compute-uaenorth-infosec", "prod-compute-uksouth-curuk", "prod-compute-uksouth-infosec", "prod-compute-westeurope-infosec", "prod-compute-westeurope-odeon", "prod-compute-westeurope-patbel", "prod-compute-westeurope-patnld", "Prod-Eventhub-shared", "prod-haproxy-centralindia-shared", "prod-haproxy-eastus-shared", "prod-keyvault-central", "prod-loganalytics-backupreports", "prod-lognalytics-eastus", "prod-lognalytics-Northeurope", "prod-lognalytics-uaecentral", "prod-lognalytics-uaenorth", "prod-lognalytics-westeurope", "prod-lognalytics-westeurope-infosec", "prod-manage-lognalytics-australiaeast", "prod-manifest", "prod-monitor-rg", "prod-network-australiaeast-manage", "prod-network-australiasoutheast-infosec", "prod-network-australiasoutheast-walaus", "prod-network-centralindia-cnpoma", "prod-network-centralindia-shared", "prod-network-cinepolis", "prod-network-eastus-cnlus", "prod-network-eastus-infosec", "prod-network-eastus-manage", "prod-network-eastus-pthus", "prod-network-eastus-shared", "prod-network-eastus-silverus", "prod-network-eastus-silvspo", "prod-network-northeurope-infosec", "prod-network-northeurope-shared", "prod-network-southcentralus-bkbus", "prod-network-southcentralus-infosec", "prod-network-southcentralus-smgus", "prod-network-southeastasia-shared", "prod-network-uaecentral-amcsau", "prod-network-uaecentral-infosec", "prod-network-uaenorth-amcsau", "prod-network-uaenorth-cpbhr", "prod-network-uaenorth-cpomn", "prod-network-uaenorth-cpuae", "prod-network-uaenorth-infosec", "prod-network-uksouth-curuk", "prod-network-uksouth-infosec", "prod-network-westeurope-infosec", "prod-network-westeurope-odeon", "prod-network-westeurope-patbel", "prod-network-westeurope-patnld", "prod-sendgrid-centralindia-shared", "prod-sonicwall-centralindia-shared", "prod-sonicwall-eastus-shared", "prod-sonicwallwaf-centralindia-shared", "prod-sql-centralindia-shared", "prod-sql-eastus-shared", "prod-storage-eastus-silverus", "prod-storage-shared", "production-resource-group", "prod-walaus-lognalytics-australiasoutheast", "qa-db-resource-group", "qa-resource-group", "QuentinRedPandaRG", "quickbooksrg", "quickstart-sf-group", "RabbitMQ_Cloud_Mission", "rad-development-resource-group", "rancher-resource-group", "redis-resource-group", "redpandaazurecloudbackup", "repair-d-507lab-ts1-20200720212633.688288", "rescue", "resource_group89411d5e", "resource-graph-queries", "retail-dev", "retail-int", "retail-prod", "retail-sandbox", "retail-uat", "ret-prod-activitylogalerts-rg", "ret-prod-dynamics-crm-rg", "RG_PayAsYouGo", "RG_WVD_AzureImageBuilder", "rg1", "rg-ag-investment-summit-wa", "rg-ag-offshore-fundprovider-wa", "RGAnalytics", "RGAppInsights", "rg-au1-ci-cim", "rg-au1-ci-concdn", "rg-au1-ci-connect", "rg-au1-ci-dns", "rg-au1-ci-svcidnt", "rg-au1-ci-wpm", "rg-au1-foo-dns", "rg-au1-int-build-compute", "rg-au1-int-build-network", "rg-au1-int-ci-cim", "rg-au1-int-common", "rg-au1-int-data", "rg-au1-int-dil-pit510", "rg-au1-int-infosec-compute", "rg-au1-int-infosec-network", "rg-au1-int-mgmt-compute", "rg-au1-int-mgmt-network", "rg-au1-int-pit510", "rg-au1-int-pit510-compute", "rg-au1-int-pit510-network", "rg-au1-int-pit510-storage", "rg-au1-int-pit-cim", "rg-au1-live-build-compute", "rg-au1-live-build-network", "rg-au1-live-common", "rg-au1-live-data", "rg-au1-live-dns", "rg-au1-live-infosec-compute", "rg-au1-live-infosec-network", "rg-au1-live-mgmt-compute", "rg-au1-live-mgmt-network", "rg-au1-perf-common", "rg-au1-pit-510b-compute", "rg-au1-pit-510b-digital", "rg-au1-pit-510b-network", "rg-au1-pit-510b-storage", "rg-au1-pit-cim", "rg-au1-pit-dns", "rg-au1-pit-pit510b-network", "rg-au1-qa-cim", "rg-au1-qa-dns", "rg-au1-sandbox-dns", "rg-au1-sbox-build-compute", "rg-au1-sbox-build-network", "rg-au1-sbox-data", "rg-au1-sbox-infosec-compute", "rg-au1-sbox-infosec-network", "rg-au1-sbox-mgmt-compute", "rg-au1-sbox-mgmt-network", "rg-au3-int-andy", "rg-au3-int-andycalico", "rg-au3-int-andycalicowin", "rg-au3-int-andyk8stest", "rg-au3-int-andynone", "rg-backuprestoretest", "rg-bar1-common", "rg-cim-dev-accessControl-australiaeast", "rg-eu1-ci-shared", "rg-eu1-dev-cim", "rg-eu1-int-infosec-compute", "rg-eu1-int-infosec-network", "rg-eu1-int-mgmt-compute", "rg-eu1-int-mgmt-network", "rg-eu1-int-shared", "rg-eu1-live-infosec-compute", "rg-eu1-live-infosec-network", "rg-eu1-live-mgmt-compute", "rg-eu1-live-mgmt-network", "rg-eu1-live-shared", "rg-eu1-pit-shared", "rg-eu1-qa-shared", "rg-eu1-sbox-infosec-compute", "rg-eu1-sbox-infosec-network", "rg-eu1-sbox-mgmt-compute", "rg-eu1-sbox-mgmt-network", "rg-eu1-sbox-shared", "rg-foo1-common", "rg-global-int-tfstate", "rg-global-live-tfstate", "rg-global-sbox-tfstate", "rg-hh-dev", "rg-marketplace-signup-test", "rg-ml-cloud-poc", "rg-saas-test-subsciptions", "rg-tb-au1-common", "rg-tb-au1-prod-cim", "rg-tb-au1-stg-bigtree", "rg-tb-au1-stg-cim", "rg-tb-au1-stg-cloudops1", "rg-tb-au1-stg-common", "rg-tb-au1-stg-pit508", "rg-tb-au1-stg-pit509", "rg-tb-au1-stg-pit510", "rg-tb-au1-stg-pulsesec1", "rg-tb-au1-stg-pulsesec2", "rg-tbird-aueast-azureFile-prod", "rg-tbird-aueast-cdn", "rg-tb-perf01-common", "rg-tb-perf01-lt-peng01", "rg-tb-perf02-common", "rg-tb-perf03-common", "rg-tb-perf03-lt-common", "rg-tb-perf04-common", "rg-tb-perf05-common", "rg-tb-perf06-common", "rg-tb-perf07-common", "rg-tb-perf08-common", "rg-tb-perf09-common", "rg-tb-perf10-common", "rg-tb-perf11-common", "rg-tb-perf17-common", "rg-tb-perf18-common", "rg-tb-perf18-lt-common", "rg-tb-perf18-lt-peng01", "rg-tb-perf1-common", "rg-tb-perf1-lt-common", "rg-tb-perf1-lt-perf1", "rg-tb-perf2-common", "rg-tb-test1-ci-abccin", "rg-tb-test1-ci-cetest", "rg-tb-test1-ci-cim", "rg-tb-test1-ci-cloudops2", "rg-tb-test1-ci-cloudops3", "rg-tb-test1-ci-cloudops4", "rg-tb-test1-ci-cloudops5", "rg-tb-test1-ci-cloudops6", "rg-tb-test1-ci-cloudops7", "rg-tb-test1-ci-common", "rg-tb-test1-ci-cteamauto", "rg-tb-test1-ci-cteamdev1", "rg-tb-test1-ci-cteamdev2", "rg-tb-test1-ci-gcr", "rg-tb-test1-common", "rg-tb-test1-dil-nebula", "rg-tb-test1-dil-pit508", "rg-tb-test1-perf-common", "rg-tb-test1-perf-perf1", "rg-tb-test1-qa-cim", "rg-tb-test1-qa-common", "rg-tb-us1-common", "rg-terraform", "rg-test1-ci-cloud1", "rg-us1-int-andy", "rg-vis-au1-ci-lumos", "rg-vis-au1-ci-lumoscms", "rg-vis-au1-qa-lumos", "rg-vis-au1-qa-lumoscms", "rg-vis-nl1", "rg-vis-nl1-stg-lumos", "rg-vis-sg1", "rg-vis-sin1", "rg-vista-test1-ci-lumos", "rg-vis-test1", "rg-vis-test3-ci-lumos", "rg-vis-test3-dev-lumos", "rg-vis-test3-stg-lumos", "rg-vis-us1", "rg-vis-us1-prod-lumos", "rg-vis-us1-stg-lumos", "rg-vis-us1-stg-lumoscms", "rg-vis-us2", "rg-vso-ruan", "rnd-monitor-rg", "rob-temp", "RoxyRSG", "rpazureprod", "rpprod", "rpsveritasazurebackup", "rp-uk-interxion-novum", "rp-uk-interxion-oldite", "RP-WVD-RG", "rtmsserversrg", "ruan-test-form-recognizer", "rvrg-1", "SaaSMarketplace_rg", "saccra-dsm-build-rg", "saccra-dsm-prod-rg", "saccra-dsm-uat-rg", "sacrra-automation-demo-rg", "sacrra-automation-dev-rg", "sacrra-automation-prod-rg", "sacrra-automation-rg", "sacrra-automation-uat-rg", "sacrra-cloudshell-rg", "sacrra-operations-vm", "sacrra-portal-dev-rg", "sacrra-reporting-rg", "sagegroup-1", "SalesServer.Azure", "sapba-rg", "sapgarg-1", "savernas", "scaleset_rg", "scalesets", "scepman-rg", "screenplusausstorage", "screenplus-integration-test-resource-group", "screenplus-test-resource-group", "sd-poc_group", "Security", "security-ci-rg", "securitydata", "security-lt-rg", "security-prod-euw-rg", "security-prod-westus2-rg", "security-qa-rg", "security-stage-rg", "SendGrid", "SendGrid-Resource-Group", "sendgrid-rg", "Sentinel", "ServeCent_group", "ServeChild1_group", "servers", "serversrg", "services", "ServicesApiRg1", "ServicesHopRg1", "SERVICESUATRG01", "ServicesVmsRg1", "ServiceTeamBugFixRg01", "Shared services", "shared-dev", "shared-global", "shared-prod", "shared-resource-group", "sharepoint-online-modern-sites", "SharePoint-Online-WorkflowEngine-Pool01", "SharePointRG", "ShraddhaDFAtest", "Shuwen_Nebula", "si_resource_group", "si-instance-1-non-prod-01-rg", "si-instance-1-prod-01-rg", "SimonBackupTest", "site_24x7_training", "site24x7", "Site24x7AppLogs", "site24x7logs", "siterecoveryrg", "site-recovery-vault-rg", "slo-tests", "sls-weur-dev-chack-rg", "sls-weur-dev-serverless-rg", "SMTP", "softwaretestvm", "SqlCouncil", "sql-execution-service", "sqlexport", "ss-prod-activedirectory-rg", "ss-prod-activitylogalerts-rg", "ss-prod-appgateway-rg", "ss-prod-appsmtp-rg", "ss-prod-azautomation-rg", "ss-prod-azmigrate-rg", "ss-prod-cmg-rg", "ss-prod-er-rg", "ss-prod-firewall-rg", "ss-prod-log-analytics-rg", "ss-prod-management-rg", "ss-prod-recoveryvault-rg", "ss-prod-security-rg", "ss-prod-smtpdev-rg", "ss-prod-vmimage-rg", "ss-prod-vnet-rg", "stage-appgateway-westeurope-odeon", "stage-appgateway-westeurope-patnld", "stage-azuresql-westeurope-odeon", "stage-azuresql-westeurope-patnld", "stage-blob-westeurope-odeon", "stage-blob-westeurope-patnld", "stage-compute-westeurope-infosec", "stage-compute-westeurope-odeon", "stage-compute-westeurope-patnld", "stage-eventhub-shared-westeurope", "stage-eventhub-shared-westeurope-westeuropewebspace-linux", "stage-loganalytics-backupreports", "stage-lognalytics-westeurope", "stage-lognalytics-westeurope-westeuropewebspace-linux", "stage-manifest", "stage-network-westeurope-infosec", "stage-network-westeurope-odeon", "stage-network-westeurope-patnld", "stage-resources-northeurope-shared", "stage-tenant-westeurope-odeon", "stagevmsshareddatadog", "staging-centralus-compute", "staging-db-resource-group", "staging-network-westeurope-shared", "staging-resource-group", "staging-sql-westeurope-shared", "staging-storage-shared", "state_cinemas_australia_east", "SterkinekorTest", "SteveTesting", "stevetesting-australiaeastwebspace-linux", "storage", "storage-australiaeast", "storage-demo-rg", "storage-dev-rg", "storage-resource-group", "storage-southeastasia", "storage-westeurope", "StreamAnalytics-Default-Central-US", "sumologic-logforwarder-rg", "Supplier info hub", "Supplier Info Hub Dev", "surgeidentityautomation", "SvcBugEnv", "SvcBugEnvSqlUK", "SvcBugEnvSqlUS", "svcBugManRg1", "tailspin-space-game-rg", "TEAMFILM", "terraform", "terraform-prod-rg", "terraform-prod-westus2-rg", "terraformtest-resources", "terraform-test-rg", "TerraTEstVnet", "Test01", "Test-AD-Trust", "TestApplicationInsights", "TestApps", "test-azurefile-storage", "TestAzureSql", "test-data-rg", "test-delete", "TestFileShare", "testfunctionappresourcegroup", "Testing_Louis", "testing-javaad-graph-delete", "testing-javaad-graph-delete2", "testing-javaad-graph-delete3", "testing-javaad-graph-deletestaging", "testing-javaad-servicebus", "testing-javaad-servicebusstaging", "TestPowerBI", "TestResourceGroup_Sentinal", "testResourceGroup1", "TestRG", "TestRG1", "Test-VGC", "tfg-bus-rg-openretaildemo", "tfg-core-rg-o2osalesreporting-poc", "thanos-resource-group", "thinka", "ThunderbirdPoc", "Thunderbird-Poc", "Thunderbird-WVD", "to-be-deleted", "treasure_new", "ts-1253u-rp", "tstate", "uat-appgateway-australiaeast-pdct", "uat-appgateway-australiaeast-perfo", "uat-appgateway-australiasoutheast-walaus", "uat-appgateway-eastus-silverus", "uat-appgateway-southcentralus-smgus", "uat-appgateway-uaecentral-amcsau", "uat-appgateway-uaenorth-amcsau", "uat-appgateway-uaenorth-combh", "uat-appgateway-uksouth-curuk", "uat-appgateway-westeurope-odeon", "uat-appgateway-westeurope-odesp", "uat-appgateway-westeurope-patbel", "uat-appgateway-westeurope-patnld", "uat-appgateway-westeurope-pdct", "uat-azuresql-australiaeast-pdct", "uat-azuresql-australiaeast-perfo", "uat-azuresql-australiasoutheast-walaus", "uat-azuresql-eastus-silverus", "uat-azuresql-southcentralus-smgus", "uat-azuresql-uaecentral-amcsau", "uat-azuresql-uaenorth-amcsau", "uat-azuresql-westeurope-odeon", "uat-azuresql-westeurope-odesp", "uat-azuresql-westeurope-patbel", "uat-azuresql-westeurope-patnld", "uat-azuresql-westeurope-pdct", "uat-blob-australiaeast-perfo", "uat-blob-eastus-silverus", "uat-blob-southcentralus-smgus", "uat-blob-uksouth-curuk", "uat-blob-westeurope-odeon", "uat-blob-westeurope-odesp", "uat-blob-westeurope-patbel", "uat-blob-westeurope-patnld", "uat-compute-australiaeast-pdct", "uat-compute-australiaeast-perfo", "uat-compute-australiasoutheast-infosec", "uat-compute-australiasoutheast-walaus", "uat-compute-eastus-infosec", "uat-compute-eastus-silverus", "uat-compute-southcentralus-infosec", "uat-compute-southcentralus-smgus", "uat-compute-uaecentral-amcsau", "uat-compute-uaecentral-infosec", "uat-compute-uaenorth-amcsau", "uat-compute-uaenorth-combh", "uat-compute-uaenorth-infosec", "uat-compute-uksouth-curuk", "uat-compute-uksouth-infosec", "uat-compute-westeurope-odeon", "uat-compute-westeurope-odesp", "uat-compute-westeurope-patbel", "uat-compute-westeurope-patnld", "uat-compute-westeurope-patnld-res", "uat-compute-westeurope-pdct", "uat-keyvault-central", "uat-lognalytics-australiaeast", "uat-lognalytics-eastus", "uat-lognalytics-uaecentral", "uat-lognalytics-uaenorth", "uat-lognalytics-uksouth", "uat-lognalytics-westeurope", "uat-manifest", "uat-network-australiaeast-pdct", "uat-network-australiaeast-perfo", "uat-network-australiasoutheast-infosec", "uat-network-australiasoutheast-walaus", "uat-network-eastus-infosec", "uat-network-eastus-silverus", "uat-network-southcentralus-infosec", "uat-network-southcentralus-smgus", "uat-network-uaecentral-amcsau", "uat-network-uaecentral-infosec", "uat-network-uaenorth-amcsau", "uat-network-uaenorth-combh", "uat-network-uaenorth-infosec", "uat-network-uksouth-curuk", "uat-network-uksouth-infosec", "uat-network-westeurope-odeon", "uat-network-westeurope-odesp", "uat-network-westeurope-patbel", "uat-network-westeurope-patnld", "uat-network-westeurope-pdct", "uat-storage-uaenorth-amcsau", "uat-vista-management", "uat-walaus-lognalytics-australiasoutheast", "ubunturg", "u-combh-va1-res_group", "uksouthrg", "umbraco_website_failover", "Unknown", "Unspecified", "u-patnld-lv01-res-june-29_group", "u-patnld-lvo1-res", "u-patnld-lvo1-rescue", "uswest2-docs-resource-group", "v5_Cinema", "v5_DevTest_Lab", "v5_HeadOffice", "v5-services", "vantage-3-prod-01-rg", "vantage-aad-b2c-qa-resource-group", "vantage-adf-non-prod-01-rg", "vantage-adf-prod-01-rg", "Vantage-API-Management-Resource-Group", "vantage-blob-nonprod-resource-group", "vantage-chatbot-nonprod-rg", "vantage-chatbot-prod-rg", "vantage-container-registry-resource-group", "vantage-cosmos-non-prod-01-resource-group", "vantage-cosmos-prod-01-resource-group", "vantage-kaizala-non-prod-01-rg", "vantage-non-prod-01-network-resource-group", "vantage-prod-01-network-resource-group", "vantage-rtpm-prod-01-rg", "vantage-si-experimental-non-prod-rg", "vantage-si-prod-01-rg", "vantage-si-vdl-chagtestrun-prod-01-rg", "vantage-si-vdl-instance-52-rg", "vantage-si-vdl-test-rg", "vantage-v3-kzn-district-emails-prod-01-rg", "vantage-v3-managed-database-non-prod-01-rg", "vantage-v3-non-prod-01-rg", "vantage-v3-program-overview-prod-01-rg", "vantage-v4-analysis-services-non-prod-01-rg", "vantage-v4-analysis-services-prod-01-rg", "vantage-v4-analysis-services-wrapper-non-prod-01-rg", "vantage-v4-analysis-services-wrapper-prod-01-rg", "vantage-v4-chatbot-non-prod-01-rg", "vantage-v4-chatbot-prod-01-rg", "vantage-v4-data-ingress-non-prod-01-rg", "vantage-v4-data-ingress-prod-01-rg", "vantage-v4-instance-225-non-prod-01-rg", "vantage-v4-instance-225-prod-01-rg", "vantage-v4-instance-226-non-prod-01-rg", "vantage-v4-instance-38-non-prod-01-rg", "vantage-v4-non-prod-01-rg", "vantage-v4-prod-01-rg", "vantage-vnet-non-prod-01-rg", "Veezi_LogicApps", "VeeziAlerts", "veezi-bo", "veezi-bo-tasks", "veezi-cm", "veezi-cm-tasks", "VeeziCN", "veezi-cn", "veezi-cn-test", "veezi-connect-task", "VeeziEU", "veezieu_v3", "veezi-eu-cm-group", "veezi-eu-customer-portal", "veezi-eu-lty-user-permission", "veezi-eu-redis", "VeeziEUv3", "VeeziEU-v3", "veezi-eu-vtixpayments", "veezi-it", "veezi-loyalty", "veezi-loyalty-tasks", "VeeziOZ", "Veezi-OZ", "veezioz_v3", "veezi-oz-bo-clone", "veezi-oz-cdn-clone", "veezi-oz-customer-portal", "veezi-oz-lty-user-permission", "veezi-oz-redis", "VeeziOZv3", "veezioz-v3", "veezi-oz-vtixpayments", "veezi-pos", "veezi-prod-bo", "veezi-prod-bo-tasks", "veezi-prod-bo-tasks-temp", "veezi-prod-CircuitMasterDataService", "veezi-prod-cm", "veezi-prod-cm-tasks", "veeziprodkiosk", "veezi-prod-lang", "veezi-prod-loyalty-tasks", "veezi-prod-pos", "veezi-prod-redis", "veezi-prod-usa", "veezi-sarft", "veezi-signage", "veezi-sline-auth", "veezi-ss", "VeeziTest", "veezi-test", "veezitest1", "veezi-test-cm-group", "veezi-test-dns", "veezi-test-functions", "VeeziTestResources", "veezi-test-tna", "VeeziUS", "veezi-usa", "veezi-us-cm", "VeeziUSE", "VeeziUSEast", "veeziuseast_v3", "veezi-useast-customer-portal", "veezi-useast-lty-user-permission", "VeeziUSEastv3", "veeziuseast-v3", "veezi-useast-vtixpayments", "VeeziUSWest", "veeziuswest_v3", "veezi-uswest-customer-portal", "veezi-uswest-lty-user-permission", "veeziuswest-v3", "veezi-uswest-vtixpayments", "VgcScheduler", "vhd_migrations", "VillageResource", "Vista.SARFT.SupervisionInterfaceWS.Azure", "Vista504", "VistaCentralRouterQA", "VistaCinema", "VistaConnect", "vistacontrolplane", "vista-devdocs", "vista-feedback-group", "VistaHeadOffice", "VistaLicensingPortal", "VistaVGPTesting", "VistaWay", "vistaway-bot-rg", "VisualStudioOnline-E460C8E1B02C4554955A6BB71CC06603", "vm_scale_set_rg", "vms-azuresql-australiaeast-shared", "vmssagents", "vodafonelivestorage-Migrated", "vpntestrg", "VS-clt-15852e95-b18a-4247-85f8-2954074159e0-Group", "VS-clt-52478815-d78c-454e-a652-7e83a5796289-Group", "VS-clt-c2e6c235-b0ef-4e2a-bb59-08e72fa06340-Group", "VS-onenebula-Group", "VS-veezi-storefront-Group", "VS-vistaconnect-Group", "VS-vista-dev-infrastructure-Group", "vteam", "VTeam1", "vteam2", "vtixtest", "walaus-storage-australiasoutheast", "WAN", "webazure", "WebRG01", "Website", "websiterg", "westeu", "westus2", "Win_Tele", "wordpress_rg", "wordpressrg", "Workplace", "wvd-rg"
    };
    private string[] Subscriptions =
    {
        "48 Software", "48 Software Pay-As-You-Go", "AG AWS Cost and Usage", "akilafoods.onmicrosoft.com", "amcengineerscoza.onmicrosoft.com", "AWS New", "bauafrika.onmicrosoft.com", "bauxitestockist.onmicrosoft.com", "bdplawazure.onmicrosoft.com", "bloomableza.onmicrosoft.com", "blueoaksystemsza.onmicrosoft.com", "bravodesignza.onmicrosoft.com", "BroadReach Corp", "BroadReach Healthcare", "Business Services Non-Prod", "Business Services Prod", "Clicks CSP", "CloudOps_Learning", "coasite.onmicrosoft.com", "coiffeuse.onmicrosoft.com_1052422", "colbeeaccountants.onmicrosoft.com", "compoundholdingsptyltd.onmicrosoft.com", "Core-Development", "Core-Infrastructure", "Core-Production", "creditinnovations.onmicrosoft.com", "Crimson Line CSP", "CXM (Live)", "CXM and Living Ticket (Test)", "Data Pipeline (Development)", "Development (Brazilian Fiscal)", "Development (Connect)", "Development (Engineering)", "Development (Film)", "Development (GroupSales)", "Development (Infrastructure)", "Development (Internal Apps)", "Development (Interns)", "Development (LATAM)", "Development (Logi Analytics)", "Development (Mobile Productivity)", "Development (OCC)", "Development (Platform)", "Development (Regal Perf Test)", "Development (Service Feedback)", "Development (Services Team)", "Development (UK Test)", "Development (v5 Dev/Test Lab)", "Development (Weather)", "devolkskombuis.onmicrosoft.com", "DFA-IT", "durampaint.onmicrosoft.com", "efselectr.onmicrosoft.com", "Endulini CSP", "Entelect", "Enterprise Worx CSP", "enterpriseworx.onmicrosoft.com", "excluservazure.onmicrosoft.com", "Global Services (LIVE)", "Global Services (Staging and QA)", "Group IT", "guardiarza.onmicrosoft.com", "gulfza.onmicrosoft.com", "hertexfabricsptyltd.onmicrosoft.com", "Institutional Non-Prod", "interxionsa.onmicrosoft.com", "lamprechtmeyer.onmicrosoft.com", "lewisgroupltd.onmicrosoft.com", "Living Ticket (Live)", "Lumos (Live)", "Lumos (Test)", "Marketing", "Microsoft Azure Sponsorship 1", "Microsoft Azure Sponsorship 2", "Microsoft Azure Sponsorship 3", "Microsoft Partner Network", "Mint Group", "MovieTeam (Live)", "MX API (Live)", "MX API (Test)", "MX Film (Live)", "MX Film (Test)", "MX Film Admin (Live)", "MX Payments (Live)", "MX Payments (Test)", "Nebula", "Nebula AWS", "Nebula CSP", "Nebula Pay-As-You-Go", "nsiaudit.onmicrosoft.com", "NZIFF", "onedayonly.onmicrosoft.com", "organicchem.onmicrosoft.com", "outdoorinvestment.onmicrosoft.com", "pastel.onmicrosoft.com", "Pay-As-You-Go", "Pick n Pay AWS", "Pick n Pay Azure", "pintellsolutions.onmicrosoft.com", "proudlysa.onmicrosoft.com", "redpandasoftware479.onmicrosoft.com", "Retail Prod", "riaanintegriaco.onmicrosoft.com", "rmortlaw.onmicrosoft.com", "rtmsza.onmicrosoft.com", "rustenvrede.onmicrosoft.com", "saccra.onmicrosoft.com", "Sandbox Subscription", "sapga.onmicrosoft.com", "saverglasscpt.onmicrosoft.com", "schmidtfamilyoffice.onmicrosoft.com", "Services Team (API Site)", "Services Team (Bug Fix)", "Services Team (Champion Pictures UAT)", "Services Team (GU)", "Services Team (Internal Client 1)", "Services Team (Internal Project)", "Services Team (Japan UAT)", "Services Team (Miramar)", "Services Team (New Vision UAT)", "Services Team (Paradise Cinemas)", "Services Team (Roxy)", "Services Team (State Cinemas UAT)", "Services Team (Sterkinekor)", "Services Team (UK Bug Replication)", "Services Team (US Bug Replication)", "Services Training (USA)", "Shared Services Prod", "Subscriptions Portal (Live)", "Subscriptions Portal (Test)", "Thunderbird - CIM (Dev)", "Thunderbird - CM (Dev)", "Thunderbird - Vouchers (Dev)", "Thunderbird (Live)", "Thunderbird (Test)", "uturnministries.onmicrosoft.com", "Veezi (Live)", "Veezi (Storefront)", "Veezi (Test)", "vilafontewines.onmicrosoft.com", "Vista Cloud (Internal)", "Vista Cloud (Live)", "Vista Cloud (Sandbox)", "Vista Compute Cloud (Live)", "Vista Compute Cloud (Test)", "Vista Digital UK (TEST)", "Vista Managed Services (Production)", "Vista Managed Services (Staging)", "wauko.onmicrosoft.com"
    };
    private string[] Vendors =
    {
        "AWS", "Azure", "Azure CSP"
    };

    protected override async Task OnInitializedAsync()
    {
        await Clear();
    }

    private string GetDates(List<string> selectedValues)
    {
        selectedDatesString = string.Join(",%20", selectedValues);
        selectDatesString = string.Join(", ", selectedValues);
        selectedDates = selectedValues;
        return $"{selectDatesString}";
    }

    private string GetProjects(List<string> selectedValues)
    {
        selectedProjectsString = string.Join(",%20", selectedValues);
        selectProjectsString = string.Join(", ", selectedValues);
        selectedProjects = selectedValues;
        return $"{selectProjectsString}";
    }

    private string GetResourceGroups(List<string> selectedValues)
    {
        selectedResourceGroupsString = string.Join(",%20", selectedValues);
        selectResourceGroupsString = string.Join(", ", selectedValues);
        selectedResourceGroups = selectedValues;
        return $"{selectResourceGroupsString}";
    }

    private string GetSubscriptions(List<string> selectedValues)
    {
        selectedSubscriptionsString = string.Join(",%20", selectedValues);
        selectSubscriptionsString = string.Join(", ", selectedValues);
        selectedSubscriptions = selectedValues;
        return $"{selectSubscriptionsString}";
    }

    private string GetVendors(List<string>selectedValues)
    {
        selectedVendorsString = string.Join(",", selectedValues);
        selectVendorsString = string.Join(", ", selectedValues);
        selectedVendors = selectedValues;
        return $"{selectVendorsString}";
    }

    private void BeginFilter()
    {
        if (selectedVendors.Count() != 0)
        {
            buildVendorFilter();
            mainfilter = mainfilter+vendorfilter;
        }

        if (selectedDates.Count() != 0)
        {
            buildDateFilter();
            if (selectedVendors.Count() != 0)
            {
                mainfilter = mainfilter + "%20and%20" + datefilter;
            }
            else
            {
                mainfilter = mainfilter + datefilter;
            }

        }
        if (selectedResourceGroups.Count() != 0)
        {
            buildResourceGroupFilter();
            if (selectedDates.Count() != 0 || selectedVendors.Count()!=0)
            {
                mainfilter = mainfilter + "%20and%20" + resourcegroupfilter;
            }
            else
            {
                mainfilter = mainfilter + resourcegroupfilter;

            }

        }

        if (selectedSubscriptions.Count() != 0)
        {
            buildSubscriptionFilter();
            if (selectedDates.Count()!=0 || selectedVendors.Count()!=0 || selectedResourceGroups.Count() != 0)
            {
                mainfilter = mainfilter + "%20and%20" + subscriptionfilter;

            }
            else
            {
                mainfilter = mainfilter + subscriptionfilter;
            }

        }

        if (selectedProjects.Count() != 0)
        {
            buildProjectFilter();
            if (selectedDates.Count() != 0 || selectedVendors.Count() != 0 || selectedResourceGroups.Count() != 0 || selectedSubscriptions.Count() != 0)
            {
                mainfilter = mainfilter + "%20and%20" + projectfilter;

            }
            else
            {
                mainfilter = mainfilter + projectfilter;
            }

        }

        link = link + filterstart + mainfilter;
    }

    private void buildVendorFilter()
    {
        if (selectedVendors.Count() == Vendors.Length)
        {
            vendorfilter = "Subscription%2FVendor%20eq%20%27All%27";
        }
        else if (selectedVendors.Count() == 1)
        {
            vendorfilter = "Subscription%2FVendor%20eq%20%27" + selectedVendors[0]+ "%27";
        }
        else
        {
            vendorfilter = "Subscription%2FVendor%20in%20(";

            for (int i = 0; i < selectedVendors.Count; i++)
            {
                if (i == selectedVendors.Count - 1)
                {
                    vendorfilter = vendorfilter + "%27" + selectedVendors[i]+ "%27)";
                }
                else
                {
                    vendorfilter = vendorfilter + "%27" + selectedVendors[i] + "%27,";
                }
            }
        }
    }

    private void buildDateFilter()
    {
        if (selectedDates.Count() == Dates.Length)
        {
            datefilter = "Dates%2FFinancialPeriod%20eq%20%27All%27";
        }
        else if (selectedDates.Count() == 1)
        {
            datefilter = "Dates%2FFinancialPeriod%20eq%20%27" + selectedDates[0] + "%27";
        }
        else
        {
            datefilter = "Dates%2FFinancialPeriod%20in%20(";

            for (int i = 0; i < selectedDates.Count; i++)
            {
                if (i == selectedDates.Count - 1)
                {
                    datefilter = datefilter + "%27" + selectedDates[i] + "%27)";
                }
                else
                {
                    datefilter = datefilter + "%27" + selectedDates[i] + "%27,";
                }
            }
        }
    }
    private void buildSubscriptionFilter()
    {
        if (selectedSubscriptions.Count() == Subscriptions.Length)
        {
            subscriptionfilter = "Subscription%2FSubscriptionName%20eq%20%27All%27";
        }
        else if (selectedSubscriptions.Count() == 1)
        {
            subscriptionfilter = "Subscription%2FSubscriptionName%20eq%20%27" + selectedSubscriptions[0] + "%27";
        }
        else
        {
            subscriptionfilter = "Subscription%2FSubscriptionName%20in%20(";

            for (int i = 0; i < selectedSubscriptions.Count; i++)
            {
                if (i == selectedSubscriptions.Count - 1)
                {
                    subscriptionfilter = subscriptionfilter + "%27" + selectedSubscriptions[i] + "%27)";
                }
                else
                {
                    subscriptionfilter = subscriptionfilter + "%27" + selectedSubscriptions[i] + "%27,";
                }
            }
        }
    }
    private void buildResourceGroupFilter()
    {
        if (selectedResourceGroups.Count() == ResourceGroups.Length)
        {
            resourcegroupfilter = "ResourceGroup%2FResourceGroupName%20eq%20%27All%27";
        }
        else if (selectedResourceGroups.Count() == 1)
        {
            resourcegroupfilter = "ResourceGroup%2FResourceGroupName%20eq%20%27" + selectedResourceGroups[0] + "%27";
        }
        else
        {
            resourcegroupfilter = "ResourceGroup%2FResourceGroupName%20in%20(";

            for (int i = 0; i < selectedResourceGroups.Count; i++)
            {
                if (i == selectedResourceGroups.Count - 1)
                {
                    resourcegroupfilter = resourcegroupfilter + "%27" + selectedResourceGroups[i] + "%27)";
                }
                else
                {
                    resourcegroupfilter = resourcegroupfilter + "%27" + selectedResourceGroups[i] + "%27,";
                }
            }
        }
    }

    private void buildProjectFilter()
    {
        if (selectedProjects.Count() == Projects.Length)
        {
            projectfilter = "CostCentre%2FCostCentre%20eq%20%27All%27";
        }
        else if (selectedProjects.Count() == 1)
        {
            projectfilter = "CostCentre%2FCostCentre%20eq%20%27" + selectedProjects[0] + "%27";
        }
        else
        {
            projectfilter = "CostCentre%2FCostCentre%20in%20(";

            for (int i = 0; i < selectedProjects.Count; i++)
            {
                if (i == selectedProjects.Count - 1)
                {
                    projectfilter = projectfilter + "%27" + selectedProjects[i] + "%27)";
                }
                else
                {
                    projectfilter = projectfilter + "%27" + selectedProjects[i] + "%27,";
                }
            }
        }
    }
    private async Task Clear()
    {
        mainfilter = "";
        link = mainlink;

        datefilter = "";
        projectfilter = "";
        resourcegroupfilter = "";
        subscriptionfilter = "";
        vendorfilter = "";

        selectedDatesString = "";
        selectedProjectsString = "";
        selectedResourceGroupsString = "";
        selectedSubscriptionsString = "";
        selectedVendorsString = "";

        Dateoptions = new HashSet<string>();
        Projectoptions = new HashSet<string>();
        ResourceGroupoptions = new HashSet<string>();
        Subscriptionoptions = new HashSet<string>();
        Vendoroptions = new HashSet<string>();

        selectedDates = new List<string>();
        selectedProjects = new List<string>();
        selectedResourceGroups = new List<string>();
        selectedSubscriptions = new List<string>();
        selectedVendors = new List<string>();
    }
}